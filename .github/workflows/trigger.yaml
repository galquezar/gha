---
name: Trigger

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Generate branch name
        run: echo BRANCH_NAME=branch-$(date +%Y%m%d%H%M) >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Change file
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git checkout -b ${{ env.BRANCH_NAME}}
          date | tee last-change.txt
          git add last-change.txt
          git commit -m "Make a change"
          git push origin HEAD:${{ env.BRANCH_NAME }} -f
      - id: create-pr
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: process.env.BRANCH_NAME,
              base: "main",
              title: "Automatic pull request"
            })
            return pr.data.number
    outputs:
      pr: ${{ steps.create-pr.outputs.result }}
      branch_name: ${{ env.BRANCH_NAME }}
  job2:
    needs: job1
    uses: ./.github/workflows/pull-request.yaml
    with:
      pr: ${{ needs.job1.outputs.pr }}
  job3:
    needs: [job1, job2]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        env:
          PR: ${{ needs.job1.outputs.pr }}
        with:
          script: |
            github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: process.env.PR
            })
      - name: Delete branch after merge
        run: git push origin --delete ${{ needs.job1.output.branch_name }}
